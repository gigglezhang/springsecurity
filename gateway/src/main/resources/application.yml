server:
  port: 8090

spring:
  application:
    name: gateway
  cloud:
    gateway:
      routes:
        - id: oauth2
          uri: http://localhost:9090
          predicates:
           - Path=/token/**
          filters:
            - StripPrefix=1  # 取消oauth2作为转发前缀
        - id: order
          uri: http://localhost:8001
          predicates:
            - Path=/order/**
          filters:
            - StripPrefix=1
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 1
            redis-rate-limiter.burstCapacity: 1
            key-resolver: "#{@ipKeyResolver}"

  security:
    oauth2:
      client:
        registration:
          gateway-client:
            client-id: gateway
            client-secret: 123456
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9090/oauth/token_key


  redis:
    host: 10.1.21.56
    port: 6379
    timeout: 10s
    lettuce:
      pool:
        max-active: 9
        max-idle: 8
        min-idle: 2
    password: Fb12345.
    database: 1

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.cloud.gateway: TRACE


#security:
#  oauth2:
#    client:
#      client-secret: 123456
#      client-id: gateway
#    resource:
#      jwt:
#        key-uri: http://localhost:9090/oauth/token_key